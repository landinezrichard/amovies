/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
	@each $prefix in $prefixes {
		#{'-' + $prefix + '-' + $property}: $value;
	}
   
	// Output standard non-prefixed declaration
	#{$property}: $value;
}

/// sacado de:
/// https://css-tricks.com/snippets/sass/mixin-prefix-properties/

/// Ejemplo de uso

//	.selector {
//		@include prefix(transform, rotate(45deg), webkit ms);
//	}

/// la salida da:

//	.selector {
//		-webkit-transform: rotate(45deg);
//		-ms-transform: rotate(45deg);
//		transform: rotate(45deg);
//	}

//______________________________________________________

/// Función para convertir "px" a "rem"
/// @author Ricardo Landínez
/// @param {String} $sizePixel - Medida en Pixeles a convertir(18px)
/// @param {String} $base-font-size - Tamaño de fuente base, por defecto 16px
/// @return {String} - Estring con la medida convertida a "rem"
@function pxTOem($sizePixel, $base-font-size:16px) {
	@if (unitless($sizePixel)) {
		$sizePixel: $sizePixel * 1px;
	}
	@if (unitless($base-font-size)) {
		$base-font-size: $base-font-size * 1px;
	}
	@return ($sizePixel / $base-font-size) + 0rem;
}

/// Ejemplo de uso
/// font-size: pxTOem(18px);
/// font-size: pxTOem(18);

/// Me guie de:
/// https://css-tricks.com/snippets/sass/px-to-em-functions/